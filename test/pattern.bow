-- let id : (A : U<0>) -> (A -> A) =
--     fun a -> fun x -> x

let sym : (A : U<0>) (B : U<0>) (p : _A ⊗ _B) -> (_B ⊗ _A) = 
  fun A B p -> 
  match p at _B ⊗ _A with
    <<(x at _A), (y at _B)>>[r,b] -> <<y, x>>[b,r]

